name: Linux CI
on: [push, pull_request]

jobs:
  ASAN:
    runs-on: ubuntu-latest
    env:
      CC: clang-11
    steps:
      - uses: actions/checkout@v2

      - name: Setup commom environment variables
        run: ./.github/workflows/env.sh asan

      - name: Setup clang repository
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          sudo add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-11 main'

      - name: Install apt packages
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake build-essential ccache cmake cpanminus cscope gcc-multilib gdb gettext gperf language-pack-tr libtool-bin locales ninja-build pkg-config python python-pip python-setuptools python3 python3-pip python3-setuptools unzip valgrind xclip

      - name: Install new clang
        run: sudo apt-get install -y clang-11

      - name: Setup interpreter packages
        run: |
          ./ci/before_install.sh
          ./ci/install.sh

      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          cache-name: asan-deps
        with:
          path: |
            ${{ env.CACHE_NVIM_DEPS_DIR }}
            ~/.ccache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('cmake/*', 'third-party/**', '**/CMakeLists.txt') }}-${{ github.base_ref }}

      - name: Build third-party
        run: ./ci/before_script.sh

      - name: Build and test
        run: ./ci/script.sh

      - name: Cache dependencies
        if: ${{ success() }}
        run: ./ci/before_cache.sh

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup commom environment variables
        run: ./.github/workflows/env.sh lint

      - name: Install apt packages
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake build-essential ccache cmake gcc-multilib gettext gperf libtool-bin locales ninja-build pkg-config python3 python3-pip python3-setuptools unzip

      - name: Setup interpreter packages
        run: |
          ./ci/before_install.sh
          ./ci/install.sh

      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          cache-name: lint-deps
        with:
          path: |
            ${{ env.CACHE_NVIM_DEPS_DIR }}
            ~/.ccache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('cmake/*', 'third-party/**', '**/CMakeLists.txt') }}-${{ github.base_ref }}

      - name: Build third-party
        run: ./ci/before_script.sh

      - name: Build and test
        run: ./ci/script.sh

      - name: Cache dependencies
        if: ${{ success() }}
        run: ./ci/before_cache.sh
